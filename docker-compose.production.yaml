services:
  web:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    env_file: './apps/web/.env.production'
    volumes:
      - ./web_data:/app/apps/web/data
    networks:
      - nginx-proxy
    depends_on:
      db:
        condition: service_healthy
  db:
    restart: unless-stopped
    image: postgres:14-alpine
    env_file: './apps/web/.env.production'
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - nginx-proxy
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  web_data:
  db_data:

networks:
  nginx-proxy:
    external: true
