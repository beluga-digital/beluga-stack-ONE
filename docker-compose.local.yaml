services:
  web:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    env_file: './apps/web/.env.production.local'
    volumes:
      - web_data:/app/apps/web/data
    depends_on:
      db:
        condition: service_healthy
  db:
    restart: unless-stopped
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    env_file: './apps/web/.env.production.local'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
  db-dev:
    restart: unless-stopped
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    env_file: './apps/web/.env.local'
    volumes:
      - db-dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  web_data:
  db_data:
  db-dev_data:
